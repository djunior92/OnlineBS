// <auto-generated />
using System;
using BSBackEnd.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace BSBackEnd.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20200616014229_CreateTables")]
    partial class CreateTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("BSBackEnd.Models.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("character varying(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Foto")
                        .HasColumnType("text");

                    b.Property<int>("QtdeDisponivel")
                        .HasColumnType("integer");

                    b.Property<bool>("RealizaEntrega")
                        .HasColumnType("boolean");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<decimal>("Valor")
                        .HasColumnType("numeric");

                    b.Property<Guid>("VendedorId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("VendedorId");

                    b.ToTable("Anuncios");
                });

            modelBuilder.Entity("BSBackEnd.Models.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CompradorId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DataPedido")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Qtde")
                        .HasColumnType("integer");

                    b.Property<bool>("SolicitaEntrega")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.HasIndex("CompradorId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("BSBackEnd.Models.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .HasColumnType("character varying(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Cep")
                        .HasColumnType("character varying(8)")
                        .HasMaxLength(8);

                    b.Property<string>("CpfCnpj")
                        .HasColumnType("character varying(14)")
                        .HasMaxLength(14);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Endereco")
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("character varying(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Numero")
                        .HasColumnType("character varying(6)")
                        .HasMaxLength(6);

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("character varying(30)")
                        .HasMaxLength(30);

                    b.Property<string>("Telefone")
                        .HasColumnType("character varying(14)")
                        .HasMaxLength(14);

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("BSBackEnd.Models.Anuncio", b =>
                {
                    b.HasOne("BSBackEnd.Models.Usuario", "Vendedor")
                        .WithMany("AnunciosRealizados")
                        .HasForeignKey("VendedorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BSBackEnd.Models.Pedido", b =>
                {
                    b.HasOne("BSBackEnd.Models.Anuncio", "Anuncio")
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BSBackEnd.Models.Usuario", "Comprador")
                        .WithMany("ComprasRealizadas")
                        .HasForeignKey("CompradorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
